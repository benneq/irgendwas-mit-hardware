{"version":3,"sources":["webpack:///./src/pages/graphics/display-synchronization.mdx"],"names":["name","_frontmatter","Lightbox","props","console","warn","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-graphics-display-synchronization-mdx-12cf65ffc1b283b14bea.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DoubleBufferingImage from '@images/graphics/doublebuffering.svg';\nimport DoubleBufferingVSyncImage from '@images/graphics/doublebufferingvsync.svg';\nimport TripleBufferingVSyncImage from '@images/graphics/triplebufferingvsync.svg';\nimport RenderAheadImage from '@images/graphics/renderahead.svg';\nimport VRRImage from '@images/graphics/vrr.svg';\nexport const _frontmatter = {\n  \"title\": \"Display Synchronisation\",\n  \"tags\": [\"double buffering\", \"triple buffering\", \"quad buffering\", \"VSync\", \"vertical synchronization\", \"Vertikale Synchronisation\", \"render ahead\", \"flip queue\", \"Fast Sync\", \"Enhanced Sync\", \"G-Sync\", \"Adaptive-Sync\", \"FreeSync\", \"VRR\", \"variable refresh rate\"]\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Lightbox = makeShortcode(\"Lightbox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h4 {...{\n      \"id\": \"fixed-refresh-rate\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#fixed-refresh-rate\",\n        \"aria-label\": \"fixed refresh rate permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Fixed Refresh Rate`}</h4>\n    <p>{`Bei Monitoren mit Fixed Refresh Rate werden die einzelnen Frames in festen Intervallen dargestellt: Beispielsweise alle 16,67 ms bei 60 Hz Wiederholfrequenz.`}</p>\n    <h5 {...{\n      \"id\": \"double-buffering\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#double-buffering\",\n        \"aria-label\": \"double buffering permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Double Buffering`}</h5>\n    <p>{`Beim Double Buffering werden zwei getrennte Speicherbereiche für jeweils das Rendering (back buffer) und die Bildübertragung zum Monitor (front buffer) genutzt. Nachdem ein Frame fertig gerendert wurde werden die Buffer vertauscht (buffer swap).`}</p>\n    <p>{`In dieser Form des Double Bufferings kann der buffer swap mitten in der Übertragung eines Bildes zum Monitor stattfinden, sodass der obere, bereits übertragene Teil zum alten Frame gehört und der untere Teil zum neuen Frame. Die Folge ist das sogenannte Tearing. Bei entsprechend hohen Frameraten kann das Bild auf dem Monitor auch aus deutlich mehr als 2 Frameteilen bestehen.`}</p>\n    <Lightbox mdxType=\"Lightbox\"><DoubleBufferingImage mdxType=\"DoubleBufferingImage\" /></Lightbox>\n    <h5 {...{\n      \"id\": \"vsync-mit-double-buffering\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#vsync-mit-double-buffering\",\n        \"aria-label\": \"vsync mit double buffering permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`VSync (mit Double Buffering)`}</h5>\n    <p>{`Um Tearing zu vermeiden, wird bei der Verwendung von VSync der Buffertausch zusätzlich so lange verzögert bis der Inhalt des front buffers vollständig zum Monitor übertragen wurde. D.h. die Buffer werden erst getauscht wenn sowohl die Grafikkarte den Frame fertig gerendert hat, als auch der Monitor bereit für das nächste Bild ist. Dadurch wird die maximale Framerate auf die Wiederholfrequnz des Monitors limitiert.`}</p>\n    <p>{`Es entsteht eine zusätzliche Verzögerung bei der Bildübertragung, weil das frisch gerenderte Bild nicht sofort dargestellt werden kann, sondern auf den Monitor warten muss. Diese Zeitspanne trägt zur Vergrößerung des input lags bei.`}</p>\n    <p>{`Außerdem kann die Framerate halbiert werden, wenn das Rendering des nächsten Frames nur minimal länger dauert als das Synchronisationsintervall, weil dann bereits wieder die Bildübertragung zum Monitor angestoßen wurde und abgewartet werden muss.`}</p>\n    <p>{`Bei ungleichmäßigen Frameraten unterhalb der Wiederholfrequenz des Monitors kann sogenanntes Stuttering entstehen, indem die Frames in ungleichmäßigen Abständen teilweise mehrfach ausgegeben werden: Die Framerate auf dem Monitor springt dann zwischen der vollen und halben Wiederholfrequenz hin und her.`}</p>\n    <Lightbox mdxType=\"Lightbox\"><DoubleBufferingVSyncImage mdxType=\"DoubleBufferingVSyncImage\" /></Lightbox>\n    <h5 {...{\n      \"id\": \"triple-buffering-mit-vsync\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#triple-buffering-mit-vsync\",\n        \"aria-label\": \"triple buffering mit vsync permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Triple Buffering (mit VSync)`}</h5>\n    <p>{`Beim Triple Buffering wird ein zweiter back buffer verwendet, um die Vorteile von Double Buffering und VSync zu vereinen. So wird die Grafikkarte nicht mehr durch die Wiederholfrequenz des Monitors in der Framerate limitiert, während gleichzeitig immer das aktuellste fertige Bild für die Übertragung zum Monitor bereitsteht.`}</p>\n    <p>{`Man erhält also ein vergleichbar niedriges input lag wie beim Double Buffering ohne VSync und gleichzeitig kein Tearing.`}</p>\n    <p>{`(Die Framerate kann von externen Tools nicht korrekt ausgelesen werden, da diese nur den front buffer swap zählen, welcher weiterhin synchron mit der Wiederholfrequnz des Monitors stattfindet)`}</p>\n    <p>{`(In manchen Spielen und Grafikbibliotheken wird fälschlicherweise Render Ahead als Triple Buffering bezeichnet, was zum schlechten Image von echtem Triple Buffering beiträgt)`}</p>\n    <Lightbox mdxType=\"Lightbox\"><TripleBufferingVSyncImage mdxType=\"TripleBufferingVSyncImage\" /></Lightbox>\n    <h5 {...{\n      \"id\": \"quad-buffering\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#quad-buffering\",\n        \"aria-label\": \"quad buffering permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Quad Buffering`}</h5>\n    <p>{`Diese Technik wird bei stereoskopischen Ausgaben benutzt, und verwendet Double Buffering für jedes Auge.`}</p>\n    <h5 {...{\n      \"id\": \"render-ahead-flip-queue\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#render-ahead-flip-queue\",\n        \"aria-label\": \"render ahead flip queue permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Render Ahead (flip queue)`}</h5>\n    <p>{`Beim Render Ahead werden Frames in einer Warteschlange (render ahead queue) vorberechnet und dann erzwungen hintereinander dargestellt. Das kann zu einer gleichmäßigeren Framerate führen, indem Performancelöcher mit den Frames aus der Warteschlange aufgefüllt werden. Aber je nach Länge und Füllstand der Warteschlange, kann ein erhöhtes input lag entstehen.`}</p>\n    <p>{`Manche Entwickler benutzen Render Ahead mit insgesamt drei Buffern und bezeichnen es fälschlicherweise als Triple Buffering. Diese Technik verhält sich allerdings nur wie Triple Buffering solange die gerenderte Framerate unterhalb der Wiederholfrequnz liegt, weil in diesem Fall die Warteschlange schneller geleert als gefüllt wird. Sobald die Framerate darüber liegt erhält man ein erhöhtes input lag, weil die alten Frames aus der Warteschlange dargestellt werden, obwohl bereits aktuellere Frames eingereiht wurden.`}</p>\n    <Lightbox mdxType=\"Lightbox\"><RenderAheadImage mdxType=\"RenderAheadImage\" /></Lightbox>\n    <h5 {...{\n      \"id\": \"fast-sync--enhanced-sync\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#fast-sync--enhanced-sync\",\n        \"aria-label\": \"fast sync  enhanced sync permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Fast Sync / Enhanced Sync`}</h5>\n    <p>{`Diese Technolgien werden als moderne Alternativen zu VSync gehandelt. Dabei wird oberhalb der Wiederholfrequenz des Monitors Triple Buffering mit VSync verwendet und unterhalb der Wiederholfrequenz wird VSync deaktiviert, wodurch Stuttering reduziert wird, aber Tearing wieder auftreten kann.`}</p>\n    <h4 {...{\n      \"id\": \"variable-refresh-rate-vrr\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#variable-refresh-rate-vrr\",\n        \"aria-label\": \"variable refresh rate vrr permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Variable Refresh Rate (VRR)`}</h4>\n    <p>{`Bei Variable Refresh Rate Monitoren kann die Wiederholfrequenz kontinuierlich und stufenlos innerhalb eines bestimmten Bereichs (VRR range) angepasst werden. Dadurch können die fertig gerenderten Frames ohne Verzögerung zum Monitor übertragen werden, wodurch Tearing und Stuttering vermieden und das input lag auf ein Minimum reduziert wird.`}</p>\n    <p>{`Das funktioniert aber nur solange die Framerate sich innerhalb der VRR range befindet. Außerhalb dieses Bereichs ist man wieder auf die Möglichkeiten von Fixed Refresh Rate Monitoren beschränkt. Daher ist es ratsam die Framerate durch Anpassung der Renderauflösung und -qualität so einzustellen, dass die VRR Range nicht verlassen wird. Zusätzlich kann ein Framelimiter verwendet werden, damit die obere Grenze nicht überschritten wird.`}</p>\n    <p>{`Diese Technologie wird auch in mobilen Geräten verwendet, um Energie zu sparen, indem die Wiederholfrequenz temporär gesenkt wird.`}</p>\n    <Lightbox mdxType=\"Lightbox\"><VRRImage mdxType=\"VRRImage\" /></Lightbox>\n    <h5 {...{\n      \"id\": \"g-sync--freesync--adaptive-sync--vrr\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h5\" {...{\n        \"href\": \"#g-sync--freesync--adaptive-sync--vrr\",\n        \"aria-label\": \"g sync  freesync  adaptive sync  vrr permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`G-Sync / FreeSync / Adaptive-Sync / VRR`}</h5>\n    <p>{`Adaptive-Sync ist Teil des DisplayPort 1.2a Standards.`}</p>\n    <p>{`FreeSync ist AMDs Implementierung von Adaptive-Sync.`}</p>\n    <p>{`G-Sync Desktop Monitore benötigen ein G-Sync Modul. In Notebooks nutzt G-Sync den eDP Standard.`}</p>\n    <p>{`VVR ist Teil von HDMI 2.1.`}</p>\n    {\n      /* https://www.anandtech.com/show/2794 */\n    }\n    {\n      /* https://www.anandtech.com/show/11664/amd-radeon-software-crimson-relive-edition-1772/6 */\n    }\n    {\n      /* https://www.youtube.com/watch?v=bMwY_dlZYiM */\n    }\n    {\n      /* https://en.wikipedia.org/wiki/Variable_refresh_r */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}