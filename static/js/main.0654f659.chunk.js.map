{"version":3,"sources":["layout/NavigationItem.tsx","layout/Navigation.tsx","layout/ScrollTop.tsx","layout/HideOnScroll.tsx","layout/Layout.tsx","memory/util/memory-latency.util.ts","memory/MemoryLatencyCalculatorPresets.tsx","util/NumberField.tsx","memory/MemoryLatencyCalculator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","active","backgroundColor","palette","action","selected","NavigationItem","props","classes","MyNavLink","React","forwardRef","navLinkProps","ref","to","activeClassName","ListItem","button","component","ListItemText","primary","text","toolbar","mixins","Navigation","className","Divider","List","root","position","bottom","spacing","right","ScrollTop","children","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","HideOnScroll","useTheme","isMobile","useMediaQuery","breakpoints","down","Slide","appear","direction","display","drawer","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","grow","flexGrow","drawerPaper","content","padding","Layout","useState","mobileOpen","setMobileOpen","handleDrawerToggle","CssBaseline","AppBar","Toolbar","IconButton","color","aria-label","edge","Menu","Typography","variant","noWrap","Search","Drawer","open","onClose","paper","ModalProps","keepMounted","id","Fab","size","KeyboardArrowUp","memoryLatencyPresetOf","type","frequency","timing","presets","MemoryLatencyCalculatorPresets","value","onChange","presetIdx","findIndex","preset","FormControl","InputLabel","Select","e","MenuItem","disabled","map","i","key","NumberField","textFieldValue","isFinite","toString","TextField","parseFloat","MemoryLatencyCalculator","setValue","clockCycleTime","frequencyMultiplier","calculateClockCycleTime","calculateFrequencyMultiplier","clockCyclesPerNs","calculateClockCyclesPerNs","latency","calculateLatency","Grid","container","item","val","label","helperText","X","App","exact","from","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0654f659.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\nimport { ListItem, ListItemText, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    active: {\n        backgroundColor: theme.palette.action.selected,\n    },\n}));\n\ntype Props = {\n    text: string\n    to: string\n}\n\nconst NavigationItem: React.FunctionComponent<Props> = (props) => {\n    const classes = useStyles();\n\n    const MyNavLink = React.forwardRef<HTMLAnchorElement>((navLinkProps: Omit<NavLinkProps, 'to'>, ref) => <NavLink to={props.to} activeClassName={classes.active} {...navLinkProps} ref={ref} />);\n\n    return (\n        <ListItem button component={MyNavLink}>\n            <ListItemText primary={props.text} />\n        </ListItem>\n    );\n};\n\nexport default NavigationItem;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, List } from '@material-ui/core';\nimport NavigationItem from './NavigationItem';\n\nconst useStyles = makeStyles(theme => ({\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst Navigation: React.FunctionComponent = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n            <NavigationItem\n                text=\"Home\"\n                to=\"/home\"\n            />\n            <NavigationItem\n                text=\"Netzwerk\"\n                to=\"/network\"\n            />\n            <NavigationItem\n                text=\"RAM\"\n                to=\"/memory\"\n            />\n        </List>\n    </>\n  );\n};\n\nexport default Navigation;","import React from 'react';\nimport { Zoom, useScrollTrigger, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n}));\n\ntype Props = {\n    children: React.ReactElement;\n}\n\nconst ScrollTop: React.FunctionComponent<Props> = (props) => {\n    const { children } = props;\n    const classes = useStyles();\n\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 100,\n    });\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\n          '#back-to-top-anchor',\n        );\n    \n        if (anchor) {\n          anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n    };\n\n    return (\n        <Zoom in={trigger}>\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n                {children}\n            </div>\n        </Zoom>\n    );\n};\n\nexport default ScrollTop;","import React from 'react';\nimport { useScrollTrigger, Slide, useTheme, useMediaQuery } from '@material-ui/core';\n\ntype Props = {\n    children: React.ReactElement;\n}\n\nconst HideOnScroll: React.FunctionComponent<Props> = (props) => {\n    const { children } = props;\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n    const trigger = useScrollTrigger();\n\n    return (\n        <Slide appear={false} direction=\"down\" in={!isMobile || !trigger}>\n            {children}\n        </Slide>\n    );\n};\n\nexport default HideOnScroll;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { CssBaseline, AppBar, Toolbar, IconButton, Typography, Drawer, useMediaQuery, Fab } from '@material-ui/core';\nimport { Menu as MenuIcon, Search as SearchIcon, KeyboardArrowUp as KeyboardArrowUpIcon } from '@material-ui/icons';\nimport Navigation from './Navigation';\nimport ScrollTop from './ScrollTop';\nimport HideOnScroll from './HideOnScroll';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  grow: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst Layout: React.FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <HideOnScroll>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap className={classes.grow}>\n              Irgendwas mit Hardware\n            </Typography>\n            <IconButton aria-label=\"search\" color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Drawer\n          variant={isMobile ? \"temporary\" : \"permanent\"}\n          anchor={isMobile && theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          <Navigation />\n        </Drawer>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} id=\"back-to-top-anchor\" />\n        {props.children}\n        <ScrollTop>\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n            <KeyboardArrowUpIcon />\n          </Fab>\n        </ScrollTop>\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;","import { MemoryLatencyPreset } from \"../model/memory-latency-preset.model\";\nimport { MemoryType } from \"../model/memory-type.model\";\n\nexport const memoryLatencyPresetOf = (type: MemoryType, frequency: number, timing: number): MemoryLatencyPreset => {\n    return { type, frequency, timing };\n};\n\nexport const calculateFrequencyMultiplier = (type: MemoryType): number => {\n    switch(type) {\n        case 'SDR': return 1;\n        case 'DDR': return 2;\n    };\n};\n\nexport const calculateClockCycleTime = (frequency: number, frequencyMultiplier: number): number => {\n    return frequency / (frequencyMultiplier * 1000);\n};\n\nexport const calculateClockCyclesPerNs = (clockCycleTime: number): number => {\n    return 1 / clockCycleTime;\n};\n\nexport const calculateLatency = (timing: number, clockCyclesPerNs: number): number => {\n    return timing * clockCyclesPerNs;\n};","import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { MemoryLatencyPreset } from './model/memory-latency-preset.model';\nimport { memoryLatencyPresetOf } from './util/memory-latency.util';\n\nconst presets = [\n    memoryLatencyPresetOf('DDR', 2133, 10),\n    memoryLatencyPresetOf('DDR', 2400, 12),\n    memoryLatencyPresetOf('DDR', 3200, 16),\n    memoryLatencyPresetOf('DDR', 3600, 18),\n];\n\ntype Props = {\n    value: MemoryLatencyPreset\n    onChange: (val: MemoryLatencyPreset) => void\n};\n\nconst MemoryLatencyCalculatorPresets: React.FunctionComponent<Props> = (props) => {\n    const { value, onChange } = props;\n\n    const presetIdx = presets.findIndex(preset => preset.type === value.type && preset.frequency === value.frequency && preset.timing === value.timing);\n\n    const handleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n        const preset = presets[e.target.value as number];\n        onChange(preset);\n    };\n\n    return (\n        <FormControl>\n            <InputLabel>Presets</InputLabel>\n            <Select\n                value={presetIdx}\n                onChange={handleChange}\n            >\n                <MenuItem disabled value={-1}>Custom</MenuItem>\n                {presets.map((preset, i) => <MenuItem key={i} value={i}>{preset.type} {preset.frequency}MHz CL{preset.timing}</MenuItem>)}\n            </Select>\n        </FormControl>\n    );\n};\n\nexport default MemoryLatencyCalculatorPresets;\n","import React from 'react';\nimport { TextField, TextFieldProps } from '@material-ui/core';\n\ntype Props = Omit<TextFieldProps, 'value' | 'onChange'> & {\n    value: number\n    onChange?: (e: React.ChangeEvent<{ value: unknown }>) => void\n}\n\nconst NumberField: React.FunctionComponent<Props> = (props) => {\n    const { value, onChange } = props;\n\n    const textFieldValue = isFinite(value) ? value.toString() : '';\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange({\n            ...e,\n            target: {\n                ...e.target,\n                value: parseFloat(e.target.value)\n            }\n        })\n    };\n\n    return (\n        <TextField\n            {...props}\n            value={textFieldValue}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport default NumberField;\n","import React, { useState } from 'react';\nimport { Grid, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport MemoryLatencyCalculatorPresets from './MemoryLatencyCalculatorPresets';\nimport NumberField from '../util/NumberField';\nimport { MemoryLatencyPreset } from './model/memory-latency-preset.model';\nimport { MemoryType } from './model/memory-type.model';\nimport { memoryLatencyPresetOf, calculateFrequencyMultiplier, calculateClockCycleTime, calculateClockCyclesPerNs, calculateLatency } from './util/memory-latency.util';\n\nconst MemoryLatencyCalculator: React.FunctionComponent = () => {\n    const [value, setValue] = useState<MemoryLatencyPreset>(memoryLatencyPresetOf('DDR', 3200, 16));\n    const { type, frequency, timing } = value;\n\n    const frequencyMultiplier = calculateFrequencyMultiplier(type);\n    const clockCycleTime = calculateClockCycleTime(frequency, frequencyMultiplier);\n    const clockCyclesPerNs = calculateClockCyclesPerNs(clockCycleTime);\n    const latency = calculateLatency(timing, clockCyclesPerNs);\n\n    const handleTypeChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(val => ({...val, type: e.target.value as MemoryType}));\n    };\n\n    const handleFrequencyChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(val => ({...val, frequency: e.target.value as number}));\n    };\n\n    const handleTimingChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(val => ({...val, timing: e.target.value as number}));\n    };\n\n    const handlePresetChange = (val: MemoryLatencyPreset) => {\n        setValue(val);\n    };\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item>\n                <FormControl>\n                    <InputLabel>Typ</InputLabel>\n                    <Select\n                        value={type}\n                        onChange={handleTypeChange}\n                    >\n                        <MenuItem value=\"SDR\">SDR</MenuItem>\n                        <MenuItem value=\"DDR\">DDR</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <NumberField\n                    label=\"Speichertakt\"\n                    helperText=\"In MHz\"\n                    value={frequency}\n                    onChange={handleFrequencyChange}\n                />\n            </Grid>\n            <Grid item>\n                <NumberField\n                    label=\"Taktzyklusdauer\"\n                    helperText=\"In ns\"\n                    disabled\n                    value={clockCycleTime}\n                />\n            </Grid>\n            <Grid item>\n                <NumberField\n                    label=\"Taktzyklen pro ns\"\n                    helperText=\"Taktzyklen\"\n                    disabled\n                    value={clockCyclesPerNs}\n                />\n            </Grid>\n            <Grid item>\n                <NumberField\n                    label=\"Timing\"\n                    helperText=\"Taktzyklen\"\n                    value={timing}\n                    onChange={handleTimingChange}\n                />\n            </Grid>\n            <Grid item>\n                <NumberField\n                    label=\"Effektive Latenz\"\n                    helperText=\"In ns\"\n                    disabled\n                    value={latency}\n                />\n            </Grid>\n            <Grid item>\n                <MemoryLatencyCalculatorPresets\n                    value={value}\n                    onChange={handlePresetChange}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default MemoryLatencyCalculator;\n","import React from 'react';\nimport Layout from './layout/Layout';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport MemoryLatencyCalculator from './memory/MemoryLatencyCalculator';\n\nconst X = () => {\n  return (\n    <div>\n      Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\n      Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n    \n      Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse\n    </div>\n  );\n}\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Redirect exact={true} from=\"/\" to=\"/home\" />\n        <Route path=\"/home\" component={X} />\n        <Route path=\"/memory\" component={MemoryLatencyCalculator} />\n        <Route path=\"/network\" component={X} />\n      </Switch>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}