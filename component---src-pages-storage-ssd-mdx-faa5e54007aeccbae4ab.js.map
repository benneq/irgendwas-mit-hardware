{"version":3,"sources":["webpack:///./src/pages/storage/ssd.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gOAKaA,EAAe,CAC1B,MAAS,MACT,KAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,kBAE/EC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,uCACA,iDACA,+EACA,gDACA,iCAAgB,kBAAIC,WAAW,KAAf,SAAhB,kFACA,+JACA,4OACA,kGACA,0KACA,wGACA,mEACA,2GACA,iDACA,+JACA,oCACA,4QACA,+BACA,oHACA,6BACA,4IACA,8OACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,SAAnB,oDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,SAAnB,oDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,WAAnB,yHAGJ,mCACA,8BACA,4NACA,qFACA,4CACA,kNACA,+BACA,gJACA,uCACA,2UACA,8BACA,mPACA,4TAKJJ,EAAWK,gBAAiB","file":"component---src-pages-storage-ssd-mdx-faa5e54007aeccbae4ab.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"SSD\",\n  \"tags\": [\"SSD\", \"SLC\", \"MLC\", \"TLC\", \"QLC\", \"TRIM\", \"NVMe\", \"M.2\", \"SATA\", \"AHCI\", \"wear leveling\"]\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h5>{`Speicherzelle`}</h5>\n    <h6>{`SLC (single-level cell)`}</h6>\n    <p>{`Bei SLC SSDs wird 1 bit pro Speicherzelle gespeichert.`}</p>\n    <h6>{`MLC (multi-level cell)`}</h6>\n    <p>{`Der Name `}<em parentName=\"p\">{`multi`}</em>{`-level cell ist nicht ganz zutreffend, da sie immer 2 bit pro Zelle speichern.`}</p>\n    <p>{`MLC Speicher sind langsamer als SLC SSDs und ihre Speicherzellen sind weniger lange haltbar, weil sie öfter beschrieben werden müssen.`}</p>\n    <p>{`Um die Performance der SSD zu erhöhen kann ein Cache verbaut werden. Dieser besteht aus einem Teil der Speicherzellen der SSD, in welchen allerdings nur jeweils 1 bit gespeichert wird: Ein sogenannter SLC Cache.`}</p>\n    <h6>{`TLC (triple-level cell) / QLC (quad-level cell) / PLC (penta-level cell)`}</h6>\n    <p>{`Bei TLC, QLC und PLC werden jeweils 3, 4 bzw. 5 bit pro Zelle gespeichert, was sich weiter negativ auf ihre Haltbarkeit und Performance auswirkt.`}</p>\n    <p>{`Auch hier wird ein SLC oder MLC Cache verwendet, um die Performance zu erhöhen.`}</p>\n    <h5>{`IOPS (input/output operations per second)`}</h5>\n    <p>{`Damit wird angegeben wie viele Transaktionen pro Sekunde ausgeführt werden können.`}</p>\n    <h5>{`TBW (terabytes written)`}</h5>\n    <p>{`Die Haltbarkeit einer SSD wird üblicherweise in TBW angegeben, also wie viele Terabytes geschrieben werden können, bevor sie ausfällt.`}</p>\n    <h5>{`Formfaktor`}</h5>\n    <p>{`SSDs werden hauptsächlich in zwei unterschiedlichen Formfaktoren angeboten: 2,5 \" und M.2. Seltener anzutreffen sind SSDs in Form von PCIe Erweiterungskarten. Im Serverbereich gibt es außerdem noch den U.2 Standard, welcher den PCIe Bus nutzt.`}</p>\n    <h6>{`2,5 \"`}</h6>\n    <p>{`2,5 \" SSDs verwenden in der Regel den SATA Bus und das AHCI Protokoll zur Datenübertragung.`}</p>\n    <h6>{`M.2`}</h6>\n    <p>{`Der M.2 Anschluss kann Daten via PCIe und SATA übertragen. Dabei wird über den PCIe Bus das NVMe Protokoll genutzt.`}</p>\n    <p>{`Eine SSD im M.2 Format beherrscht jeweils nur eins der beiden Protokolle. Allerdings gibt es Systeme mit M.2 Sockeln, die beide Protokolle unterstützen. Den M.2 Anschluss gibt es in unterschiedlichen Ausführungen:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`B-key`}</strong>{` Anschlüsse unterstützen SATA und/oder PCIe 2x.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`M-key`}</strong>{` Anschlüsse unterstützen SATA und/oder PCIe 4x.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`B+M-key`}</strong>{` Anschlüsse unterstützen SATA und/oder PCIe 2x. SSDs mit diesem Anschluss passen sowohl in B- als auch M-Key Slots.`}</p>\n      </li>\n    </ul>\n    <h5>{`Protokoll`}</h5>\n    <h6>{`AHCI`}</h6>\n    <p>{`Das AHCI Protokoll wurde für herkömmliche Festplatten entwickelt. Durch Native Command Queuing (NCQ) können die anstehenden Befehle umsortiert werden, um sie in optimaler Reihenfolge auszuführen.`}</p>\n    <p>{`Für SSDs wurde das Protokoll um das TRIM Kommando erweitert.`}</p>\n    <h6>{`NVMe (NVM Express)`}</h6>\n    <p>{`Das NVMe Protokoll wurde speziell für Anwendungen mit vielen parallen Zugriffen entwickelt. Das Ergebnis ist ein reduzierter I/O Overhead und verringerte Latzenten im Vergleich zu AHCI.`}</p>\n    <h5>{`Cache`}</h5>\n    <p>{`Um die Performance von MLC, TLC, QLC oder PLC SSDs zu erhöhen wird ein Teil der Speicherzellen als SLC Cache verwendet.`}</p>\n    <h5>{`Wear leveling`}</h5>\n    <p>{`Speicherzellen einer SSD nutzen sich ab wenn sie beschrieben werden. Mittels wear leveling sorgt der SSD Controller dafür, dass die Schreibzugriffe gleichmäßig auf alle Speicherzellen verteilt werden, damit nicht manche Bereiche des Speichers frühzeitig ausfallen, weil sie immer wieder beschrieben wurden.`}</p>\n    <h5>{`TRIM`}</h5>\n    <p>{`Da Dateisysteme in der Regel keine Daten löschen, sondern sie nur als \"unbenutzt\" kennzeichnen, weiß eine SSD nicht welche Speicherzellen tatsächlich noch benutzt werden und welche als freier Speicher angesehen können.`}</p>\n    <p>{`Mit dem TRIM Kommando kann das Betriebssystem die SSD über die ungenutzten Speicherbereiche informieren, sodass die SSD die zugehörigen Speicherzellen wieder für Schreiboperationen nutzen kann. Das Ergebnis ist eine höhere Schreibperformance und eine geringere Abnutzung der Speicherzellen.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}